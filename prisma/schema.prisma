generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?   // Ensure this field is present
  role          String    @default("EMPLOYEE") // Add role field
  accounts      Account[]
  sessions      Session[]
  employee      Employee?
  posts         Post[]
}

model Employee {
  id             Int       @id @default(autoincrement())
  firstName      String
  lastName       String
  telephone      String
  email          String    @unique
  managerId      Int?
  manager        Employee? @relation("EmployeeManager", fields: [managerId], references: [id])
  subordinates   Employee[] @relation("EmployeeManager")
  status         String
  userId         String    @unique // Add @unique attribute
  user           User      @relation(fields: [userId], references: [id])
  departments    Department[] @relation("EmployeeDepartments")
}

model Department {
  id             Int       @id @default(autoincrement())
  name           String
  status         String
  employees      Employee[] @relation("EmployeeDepartments")
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User      @relation(fields: [userId], references: [id])
}

model Session {
  id                 Int       @id @default(autoincrement())
  sessionToken       String    @unique
  userId             String
  expires            DateTime
  user               User      @relation(fields: [userId], references: [id])
}

model Post {
  id                 Int       @id @default(autoincrement())
  name               String
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  userId             String
  user               User      @relation(fields: [userId], references: [id])
}
